{"version":3,"sources":["map/olmap/store/actionTypes.js","map/olmap/store/actionCreator.js","map/olmap/olmap.js","map/olmap/olmapManager.js","map/olmap/store/reducer.js","map/toobar/tools/addXYZLayerTool.js","map/toobar/tools/addCSVLayerTool.js","map/toobar/index.js","map/toc/style.js","map/toc/layerSettingModal/RasterLayerSettingModal.js","map/common/ColorChooser.js","map/toc/layerSettingModal/VectorLayerSettingModal.js","map/toc/layerSettingModal/index.js","map/toc/LayerItem.js","map/toc/index.js","map/olmap/style.js","map/olmap/index.js","map/toc/store/reducer.js","map/store/reducer.js","map/store/index.js","style.js","map/index.js","index.js"],"names":["ADD_LAYER","REMOVE_LAYER_BY_NAME","SET_LAYER_PROPS","LAYER_UP","LAYER_DOWN","addLayerAction","layer","type","constants","removeLayerByNameAction","name","setLayerPropsAction","layerName","props","layerUpAction","layerDownAction","defaultPointStyle","Style","image","Circle","fill","Fill","color","stroke","Stroke","width","radius","layerIdGenerator","id","regenerator_default","a","wrap","_context","prev","next","stop","_marked","layerIDGen","genLayerName","olmap","getLayers","getArray","map","l","get","includes","value","findLayerByName","find","findLayerIndexByName","findIndex","osmLayer","TileLayer","source","OSM","defaultState","version","layerVersion","Map","view","View","center","fromLonLat","zoom","controls","layers","layerNums","copyState","state","length","AddXYZLayerTool","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputName","inputURL","modalVisible","onButtonClick","bind","assertThisInitialized","onURLInputChange","onNameInputChange","onModalOK","onModalCancle","_this2","_this$props","onAddXYZLayer","react_default","createElement","react","es_button","ghost","onClick","block","modal","title","visible","onOk","onCancel","input","onChange","e","target","setState","preState","toggleModal","addLayer","Component","connect","dispatch","url","XYZ","olmapFuncs","action","actionCreators","AddCSVLayerTool","onRadioChange","inputCSVType","csvType","STRING","FILE","URL","okDisabled","inputCSV","lonFieldIndex","latFieldIndex","timeFieldIndex","onCSVInputChange","readCSVFile","readCSVURL","getCSVHeadInfo","okButtonProps","disabled","es_radio","Group","getCSVSettingPanel","es_select","size","defaultValue","v","Option","key","_this3","TextArea","placeholder","autosize","minRows","maxRows","upload","icon","Search","enterButton","onSearch","file","_this4","Promise","resolve","reject","reader","FileReader","readAsText","onload","result","onerror","error","console","_this5","axios","then","res","data","catch","lon","lat","time","split","field","index","csv","fieldIndex","features","slice","filter","s","r","values","timeIndex","Feature","geometry","Point","VectorLayer","VectorSource","style","MapToobar","MapToobarWrapper","addXYZLayerTool","addCSVLayerTool","styled","div","_templateObject","TOCWrapper","style_templateObject","TOCTitle","_templateObject2","LayerItemWrapper","_templateObject3","LayerToolDiv","_templateObject4","RasterLayerSettingModal","onOK","onCancle","defaultSetting","onSettingOK","onSettingCancle","onSettingChange","nextProps","nextContext","slider","min","max","step","es_switch","defaultChecked","checked","set","setProperties","getProperties","ColorChooser","lib","onColorChange","display","VectorLayerSettingModal","colorPanelVisible","toggleColorPanel","onColorPanelChange","addonAfter","fillColor","common_ColorChooser","colorCode","log","hex","setStyle","LayerSettingModal","settingModalChooser","ImageLayer","vectorLayerSettingModal","rasterLayerSettingModal","layerSettingModal_VectorLayerSettingModal","layerSettingModal_RasterLayerSettingModal","LayerItem","toolVisible","settingVisible","layerProps","OLMAP","onMouseEnter","onMouseLeave","onSettingClick","P","S","className","layerUp","layerDown","zoomToLayer","removeLayer","showSettingModal","layerSettingModal","getView","fit","getSource","getExtent","olmapActions","makeLayerList","toc_LayerItem","reverse","HeaderWrapper","olmap_style_templateObject","TitleDiv","style_templateObject2","MapDiv","style_templateObject3","style_templateObject4","Olmap","toobar","style_TOCWrapper","toc","setTarget","on","prevProps","prevState","snapshot","render","combineReducers","newState","arguments","undefined","layerIndex","getLength","theLayer","item","insertAt","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","reducer","GlobalStyle","createGlobalStyle","src_style_templateObject","MapAPP","es","map_olmap","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.83ca7a1e.chunk.js","sourcesContent":["export const ADD_LAYER = 'olmap/ADD_LAYER';\nexport const REMOVE_LAYER_BY_NAME = 'olmap/REMOVE_LAYER_BY_NAME';\nexport const SET_LAYER_PROPS = 'olmap/SET_LAYER_PROPS';\nexport const LAYER_UP = 'olmap/LAYER_UP';\nexport const LAYER_DOWN = 'olmap/LAYER_DOWN';","import {constants} from \"./index\";\n\n\nexport const addLayerAction = (layer) => ({\n\n    type: constants.ADD_LAYER,\n    layer\n\n});\n\nexport const removeLayerByNameAction = (name) => ({\n\n    type: constants.REMOVE_LAYER_BY_NAME,\n    name\n\n});\n\nexport const setLayerPropsAction = (layerName, props) => ({\n    type: constants.SET_LAYER_PROPS,\n    layerName,\n    props\n});\n\nexport const layerUpAction = (layerName) => ({\n    type: constants.LAYER_UP,\n    layerName\n});\n\nexport const layerDownAction = (layerName) => ({\n    type: constants.LAYER_DOWN,\n    layerName\n});","import VectorLayer from 'ol/layer/Vector';\nimport Style from \"ol/style/Style\";\nimport {Circle, Fill, Stroke} from \"ol/style\";\n\nexport const defaultPointStyle = new Style({\n\n    image: new Circle({\n\n        fill: new Fill({color:'red'}),\n        stroke: new Stroke({color:'blue', width:2}),\n        radius: 5\n\n    })\n\n});\n\nexport const getPointStyleByColor = color => {\n\n    return new Style({\n\n        image: new Circle({\n\n            fill: new Fill({color: color}),\n            stroke: new Stroke({color:'blue', width:2}),\n            radius: 5\n\n        })\n\n    });\n\n};\n","import TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\nimport {fromLonLat} from 'ol/proj';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport ImageLayer from \"ol/layer/Image\";\nimport {Group} from \"ol/layer\";\nimport BaseLayer from \"ol/layer/Base\";\nimport {defaultPointStyle} from './olmap';\n\nfunction* layerIdGenerator() {\n    let id = 1;\n    while (true) {\n        yield id;\n        id += 1;\n    }\n}\n\n//layer编号生成\nexport const layerIDGen = layerIdGenerator();\n\n//生成图层唯一名称，要判断地图里面有没有重名的，如果有需要添加唯一编号\nexport const genLayerName = (olmap, name) => {\n    name = name || \"layer\";\n    const layersNames = olmap.getLayers().getArray().map(l => l.get('name'));\n    return layersNames.includes(name) ? name + \"_\" + layerIDGen.next().value : name;\n};\n\n//使用提供的xyz瓦片的url生成图层\nexport const makeXYZLayer = (olmap, name, url) => {\n    const layer = new TileLayer({\n        name: genLayerName(olmap, name),\n        source: new XYZ({\n            url\n        })\n    });\n    return layer;\n\n};\n\n//得到指定名字的图层\nexport const findLayerByName = (olmap, name) => {\n    return olmap.getLayers().getArray().find(layer => layer.get('name') === name);\n};\n\n//得到指定名字的图层index，相当于图层在地图中的顺序\nexport const findLayerIndexByName = (olmap, name) => {\n    return olmap.getLayers().getArray().findIndex(layer => layer.get('name') === name);\n};\n\n//删除指定名字的图层\nexport const removeLayerByName = (olmap, name) => {\n\n    const layer = findLayerByName(olmap, name);\n    if (layer) {\n        olmap.removeLayer(layer);\n    }\n\n};\n\n//设置指定名字的图层的属性\nexport const setLayerProps = (olmap, name, props) => {\n    const layer = findLayerByName(olmap, name);\n    if (layer) {\n        layer.setProperties(props);\n    }\n};\n\n//使用csv数据生成矢量图层\nexport const makeCSVLayer = (olmap, name, csv, fieldIndex) => {\n\n    const features = csv\n        .split(\"\\n\") //拆分行\n        .slice(1) //去掉第一行\n        .filter(s => s != null && s.length > 0) //去掉空行\n        .map(r => {\n            const values = r.split(\",\");\n            const lon = values[fieldIndex['lon']] * 1.0;\n            const lat = values[fieldIndex['lat']] * 1.0;\n            const timeIndex = fieldIndex['time'] * 1;\n            const time = (timeIndex < 0) ? '' : values[timeIndex];\n            return new Feature({\n                geometry: new Point(fromLonLat([lon, lat])),\n                name: time\n            });\n        });\n\n    return new VectorLayer({\n        source: new VectorSource({\n            features\n        }),\n        name: genLayerName(olmap, name),\n        style: defaultPointStyle\n    });\n\n};\n\nexport const layerUp = (olmap, name) => {\n    const layerIndex = findLayerIndexByName(olmap, name);\n    const layerNums = olmap.getLayers().getLength();\n    if (layerIndex !== -1 && layerIndex < layerNums - 1) {\n        const theLayer = olmap.getLayers().item(layerIndex);\n        olmap.removeLayer(theLayer);\n        olmap.getLayers().insertAt(layerIndex + 1, theLayer);\n    }\n};\n\nexport const layerDown = (olmap, name) => {\n    const layerIndex = findLayerIndexByName(olmap, name);\n    if (layerIndex > 0) {\n        const theLayer = olmap.getLayers().item(layerIndex);\n        olmap.removeLayer(theLayer);\n        olmap.getLayers().insertAt(layerIndex - 1, theLayer);\n    }\n};\n\nexport const zoomToLayer = (olmap, name) => {\n    const layer = findLayerByName(olmap, name);\n    if (layer instanceof VectorLayer) {\n        olmap.getView().fit(layer.getSource().getExtent());\n    }\n};\n\nexport const getLayerType = layer => {\n    if(layer instanceof VectorLayer) {\n        return \"VectorLayer\";\n    } else if (layer instanceof ImageLayer) {\n        return \"ImageLayer\";\n    } else if (layer instanceof TileLayer) {\n        return \"TileLayer\";\n    } else if (layer instanceof Group) {\n        return \"Group\";\n    } else {\n        return \"BaseLayer\";\n    }\n};","import * as constants from './actionTypes';\nimport {Map, View} from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport {fromLonLat} from 'ol/proj';\nimport * as OLMAP from '../olmapManager';\n\nconst osmLayer = new TileLayer({\n    name: 'osm',\n    source: new OSM()\n});\n\nconst olmap = new Map({\n    view: new View({\n        center: fromLonLat([118.794315,32.050167]),\n        zoom: 10\n    }),\n    controls:[],\n    layers: [osmLayer]\n});\n\n\nconst defaultState = {\n    version: 0,\n    layerVersion:0,\n    olmap: olmap,\n    layerNums: 1\n};\n\n\nconst copyState = (state) => ({\n    version: state.version+1,\n    layerVersion: state.layerVersion,\n    olmap: state.olmap,\n    layerNums: state.olmap.getLayers().getArray().length,\n});\n\n\nexport default ((state = defaultState, action)=> {\n\n    let newState;\n\n    switch (action.type) {\n        case constants.ADD_LAYER:\n            state.olmap.addLayer(action.layer);\n            newState = copyState(state);\n            newState.layerVersion = newState.layerVersion+1;\n            return newState;\n        case constants.REMOVE_LAYER_BY_NAME:\n            OLMAP.removeLayerByName(state.olmap,action.name);\n            newState = copyState(state);\n            newState.layerVersion = newState.layerVersion+1;\n            return newState;\n        case constants.SET_LAYER_PROPS:\n            OLMAP.setLayerProps(state.olmap,action.name,action.props);\n            newState = copyState(state);\n            return newState;\n        case constants.LAYER_UP:\n            OLMAP.layerUp(state.olmap,action.layerName);\n            newState = copyState(state);\n            newState.layerVersion = newState.layerVersion+1;\n            return newState;\n        case constants.LAYER_DOWN:\n            OLMAP.layerDown(state.olmap,action.layerName);\n            newState = copyState(state);\n            newState.layerVersion = newState.layerVersion+1;\n            return newState;\n\n        default:\n            return state;\n    }\n\n});","import React, {Component, Fragment} from 'react';\nimport {Button, Input, Modal} from 'antd';\nimport {connect} from 'react-redux';\nimport {actionCreators} from '../../olmap/store';\nimport * as olmapFuncs from \"../../olmap/olmapManager\";\n\nclass AddXYZLayerTool extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputName: 'OSM Black and White',\n            inputURL: 'http://tiles.wmflabs.org/bw-mapnik/{z}/{x}/{y}.png',\n            modalVisible: false\n        };\n        this.onButtonClick = this.onButtonClick.bind(this);\n        this.onURLInputChange = this.onURLInputChange.bind(this);\n        this.onNameInputChange = this.onNameInputChange.bind(this);\n        this.onModalOK = this.onModalOK.bind(this);\n        this.onModalCancle = this.onModalCancle.bind(this);\n    }\n\n    render() {\n\n        const {olmap, onAddXYZLayer} = this.props;\n\n        return (\n            <Fragment>\n\n                <Button ghost={false} onClick={this.onButtonClick} block={true}>添加XYZ图层</Button>\n                <Modal\n                    title = '添加XYZ图层'\n                    visible={this.state.modalVisible}\n                    onOk={()=>this.onModalOK(olmap,onAddXYZLayer)}\n                    onCancel={this.onModalCancle}\n                >\n                    请输入图层名称:\n                    <Input value={this.state.inputName} onChange={this.onNameInputChange}/>\n                    请输入XYZ图层URL:\n                    <Input value={this.state.inputURL} onChange={this.onURLInputChange}/>\n                </Modal>\n\n            </Fragment>\n        );\n    }\n\n    onURLInputChange(e) {\n        const inputURL = e.target.value;\n        this.setState((preState)=>({\n            inputURL\n        }));\n    }\n\n    onNameInputChange(e) {\n        const inputName = e.target.value;\n        this.setState((preState)=>({\n            inputName\n        }));\n    }\n\n\n    onButtonClick() {\n        this.toggleModal();\n    }\n\n    onModalOK(olmap, addLayer) {\n        this.toggleModal();\n        addLayer(olmap,this.state.inputName,this.state.inputURL);\n    }\n\n    onModalCancle() {\n        this.toggleModal();\n    }\n\n    toggleModal() {\n        this.setState((preState)=>({\n            modalVisible: !preState.modalVisible\n        }));\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    olmap: state.olmap.olmap\n});\n\nconst mapDispatchToProps = (dispatch)=>({\n    onAddXYZLayer: (olmap,name,url)=> {\n        const layer = olmapFuncs.makeXYZLayer(olmap,name, url);\n        const action = actionCreators.addLayerAction(layer);\n        dispatch(action);\n    }\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(AddXYZLayerTool);","import React, {Component, Fragment} from 'react';\nimport {Input, Button, Modal,Radio, Divider, Select, Icon, Upload} from 'antd';\nimport {connect} from 'react-redux';\nimport {actionCreators} from '../../olmap/store';\nimport * as olmapFuncs from \"../../olmap/olmapManager\";\nimport axios from 'axios';\n\nclass AddCSVLayerTool extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.csvType = {\n            STRING: 'string',\n            FILE: 'file',\n            URL: 'URL'\n        };\n\n        this.state = {\n\n            modalVisible: false,\n            okDisabled: false,\n\n            inputName: 'CSV_Vector',\n            inputCSVType: this.csvType.STRING,\n            inputCSV: '',\n\n            lonFieldIndex:0,\n            latFieldIndex:1,\n            timeFieldIndex:-1\n\n        };\n\n        this.onButtonClick = this.onButtonClick.bind(this);\n        this.onRadioChange = this.onRadioChange.bind(this);\n        this.onNameInputChange = this.onNameInputChange.bind(this);\n        this.onCSVInputChange = this.onCSVInputChange.bind(this);\n        this.readCSVFile = this.readCSVFile.bind(this);\n        this.readCSVURL = this.readCSVURL.bind(this);\n        this.getCSVHeadInfo = this.getCSVHeadInfo.bind(this);\n        this.onModalOK = this.onModalOK.bind(this);\n        this.onModalCancle = this.onModalCancle.bind(this);\n    }\n\n    render() {\n\n        return (\n            <Fragment>\n\n                <Button ghost={false} onClick={this.onButtonClick} block={true}>添加CSV矢量图层</Button>\n                <Modal\n                    title = '添加CSV矢量图层'\n                    visible={this.state.modalVisible}\n                    onOk={this.onModalOK}\n                    onCancel={this.onModalCancle}\n                    okButtonProps={{disabled:this.state.okDisabled}}\n                >\n                    <Radio.Group onChange={this.onRadioChange} value={this.state.inputCSVType}>\n                        <Radio value={this.csvType.STRING}>CSV字符串</Radio>\n                        <Radio value={this.csvType.FILE}>CSV文件</Radio>\n                        <Radio value={this.csvType.URL}>CSV的URL</Radio>\n                    </Radio.Group>\n                    <br/>\n                    {this.getCSVSettingPanel(this.state.inputCSVType)}\n                    <br/>\n                    经度字段:\n                    <Select size='small' defaultValue={this.state.lonFieldIndex} onChange={(v)=>this.setState({lonFieldIndex:v})}>\n                        {this.getCSVHeadInfo()}\n                    </Select><br/>\n                    纬度字段:\n                    <Select size='small' defaultValue={this.state.latFieldIndex} onChange={(v)=>this.setState({latFieldIndex:v})}>\n                        {this.getCSVHeadInfo()}\n                    </Select><br/>\n                    时间字段:\n                    <Select size='small' defaultValue={this.state.timeFieldIndex} onChange={(v)=>this.setState({timeFieldIndex:v})}>\n                        <Select.Option value={-1} key={-1}>无时间字段</Select.Option>\n                        {this.getCSVHeadInfo()}\n                    </Select><br/>\n                </Modal>\n\n            </Fragment>\n        );\n\n    }\n\n    onRadioChange = e => {\n      this.setState({\n          inputCSVType: e.target.value\n      })\n    };\n\n    getCSVSettingPanel(csvType) {\n        switch (csvType) {\n            case this.csvType.STRING:\n                return (\n                    <Fragment>\n                        请输入图层名称:\n                        <Input value={this.state.inputName} onChange={this.onNameInputChange}/>\n                        请粘贴CSV内容:\n                        <Input.TextArea placeholder='Please Enter CSV Text'\n                            autosize={{ minRows: 5, maxRows: 8 }} value={this.state.inputCSV} onChange={this.onCSVInputChange}/>\n                    </Fragment>\n                );\n            case this.csvType.FILE:\n                return (\n                    <Fragment>\n                        请输入图层名称:\n                        <Input value={this.state.inputName} onChange={this.onNameInputChange}/>\n                        <Upload action={this.readCSVFile}>\n                            <Button>\n                                <Icon type=\"upload\" /> Upload\n                            </Button>\n                        </Upload>\n                        <Input.TextArea placeholder='Please Enter CSV Text'\n                                        autosize={{ minRows: 5, maxRows: 8 }} value={this.state.inputCSV} onChange={this.onCSVInputChange}/>\n                    </Fragment>\n                );\n            case this.csvType.URL:\n                return (\n                    <Fragment>\n                        请输入图层名称:\n                        <Input value={this.state.inputName} onChange={this.onNameInputChange}/>\n                        请输入CSV的URL地址:\n                        <Input.Search\n                            placeholder=\"input CSV URL\"\n                            enterButton=\"读取\"\n                            size=\"large\"\n                            onSearch={value => this.readCSVURL(value)}\n                        />\n                        <Input.TextArea placeholder='Please Enter CSV Text'\n                                        autosize={{ minRows: 5, maxRows: 8 }} value={this.state.inputCSV} onChange={this.onCSVInputChange}/>\n                    </Fragment>\n                );\n            default:\n                return \"\";\n        }\n    }\n\n    onCSVInputChange(e) {\n        this.setState({\n            inputCSV: e.target.value\n        });\n    }\n\n    readCSVFile(file) {\n        return new Promise((resolve,reject)=>{\n            const reader = new FileReader();\n            reader.readAsText(file);\n            reader.onload = () => {\n                this.setState({inputCSV:reader.result});\n                this.getCSVHeadInfo();\n                resolve(reader.result);\n            };\n            reader.onerror = error => {\n                this.setState({inputCSV:\"\"});\n                this.getCSVHeadInfo();\n                console.error(\"read csv file error\");\n                reject(\"\");\n            }\n        });\n    }\n\n    readCSVURL(url) {\n        if(url) {\n            axios.get(url).then(res=>{\n                const data = res.data;\n                this.setState({inputCSV:data});\n                this.getCSVHeadInfo();\n            }).catch(e=>{\n                this.setState({inputCSV:\"\"});\n                this.getCSVHeadInfo();\n                console.error(\"csv url error\");\n            })\n        }\n    }\n\n    onNameInputChange(e) {\n        const inputName = e.target.value;\n        this.setState((preState)=>({\n            inputName\n        }));\n    }\n\n\n    onButtonClick() {\n        this.toggleModal();\n    }\n\n    onModalOK() {\n        this.toggleModal();\n        this.props.addLayer(this.props.olmap,this.state.inputName,this.state.inputCSV,{\n            lon: this.state.lonFieldIndex,\n            lat: this.state.latFieldIndex,\n            time: this.state.timeFieldIndex\n        });\n    }\n\n    onModalCancle() {\n        this.toggleModal();\n    }\n\n    toggleModal() {\n        this.setState((preState)=>({\n            modalVisible: !preState.modalVisible\n        }));\n    }\n\n    getCSVHeadInfo() {\n        const csv = this.state.inputCSV;\n        const head = csv.split(\"\\n\")[0];\n        const fields = head.split(\",\");\n        return fields.map((field,index)=><Select.Option value={index} key={index}>{field}</Select.Option>);\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    olmap: state.olmap.olmap\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    addLayer: (olmap, name, csv, fieldIndex) => {\n        const layer = olmapFuncs.makeCSVLayer(olmap,name,csv,fieldIndex);\n        const action = actionCreators.addLayerAction(layer);\n        dispatch(action);\n    }\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(AddCSVLayerTool);","import React, {Component} from 'react';\nimport 'antd/dist/antd.css';\nimport {connect} from 'react-redux';\nimport * as tools from './tools';\nimport './maptoolbar.css'\nimport styled from 'styled-components';\n\nclass MapToobar extends Component {\n\n    render() {\n\n        return (\n            <MapToobarWrapper id='maptoolbar'>\n\n                <tools.AddXYZLayerTool/>\n                <tools.AddCSVLayerTool/>\n\n            </MapToobarWrapper>\n        );\n    }\n}\n\nconst MapToobarWrapper = styled.div`\n\n    position: absolute;\n    top: 42px;\n    width: 160px;\n    z-index: 99;\n    opacity: 1;\n    \n    .button {\n      border: 1px solid red;\n    }\n    \n\n`;\n\n\nconst mapStateToProps = (state) => ({\n    olmap: state.olmap.olmap\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MapToobar);","import styled from 'styled-components';\n\nexport const TOCWrapper = styled.div`\n  width: 200px;\n  height: 100%;\n  overflow: auto;\n  background-color: rgba(0,0,0,0.8);\n  box-sizing: border-box;\n  margin: 0px 0px;\n  \n`;\n\nexport const TOCTitle = styled.div`\n  box-sizing: border-box;\n  min-height: 30px;\n  padding-left: 10px;\n  //border: 1px solid white;\n  //overflow: auto;\n  background-color: rgba(50,50,50,0.8);\n  text-align: center;\n  span {\n    color: blanchedalmond;\n    font-size: 18px;\n    line-height: 30px;\n  }\n`;\n\nexport const LayerItemWrapper = styled.div`\n  \n  box-sizing: border-box;\n  min-height: 30px;\n  padding-left: 10px;\n  border: 1px solid darkblue;\n  overflow: auto;\n  \n  span {\n    color: blanchedalmond;\n    font-size: 18px;\n    line-height: 30px;\n  }\n  \n  .layerNameSpan {\n    font-size: 10px;\n  }\n  \n  .iconfont {\n    cursor: pointer;\n  }\n  \n`;\n\nexport const LayerToolDiv = styled.div`\n  float: right;\n  \n  &.hide {\n    display: none;\n  }\n`;","import React, {Component} from 'react';\nimport {Modal,Switch,Slider} from 'antd';\n\nclass RasterLayerSettingModal extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state= {\n            visible: props.visible,\n            onOK: props.onOK,\n            onCancle: props.onCancle,\n            defaultSetting: this.defaultSetting(this.props.layer)\n        };\n        this.onSettingOK = this.onSettingOK.bind(this);\n        this.onSettingCancle = this.onSettingCancle.bind(this);\n        this.onSettingChange = this.onSettingChange.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({\n            visible: nextProps.visible,\n            onOK: nextProps.onOK,\n            onCancle: nextProps.onCancle,\n        });\n    }\n\n    render() {\n\n        const {layer} = this.props;\n\n        return(\n            <Modal\n                title = {\"栅格图层 \"+layer.get('name')+\" 属性设置：\"}\n                visible={this.state.visible}\n                onOk={this.onSettingOK}\n                onCancel={this.onSettingCancle}\n            >\n                Brightness: <Slider defaultValue={layer.get('brightness')} min={0} max={1} step={0.1} onChange={(value)=>{this.onSettingChange('brightness',value)}}/>\n                Contrast: <Slider defaultValue={layer.get('contrast')} min={0} max={1} step={0.1} onChange={(value)=>{this.onSettingChange('contrast',value)}}/>\n                Hue: <Slider defaultValue={layer.get('hue')} min={0} max={1} step={0.1} onChange={(value)=>{this.onSettingChange('hue',value)}}/>\n                Astruation: <Slider defaultValue={layer.get('astruation')} min={0} max={1} step={0.1} onChange={(value)=>{this.onSettingChange('astruation',value)}}/>\n                Opacity: <Slider defaultValue={layer.get('opacity')} min={0} max={1} step={0.1} onChange={(value)=>{this.onSettingChange('opacity',value)}}/>\n                Visible: <Switch defaultChecked={layer.get('visible')} onChange={(checked)=>{this.onSettingChange('visible',checked)}}/>\n            </Modal>\n        );\n    }\n\n    onSettingChange(key,value) {\n        this.props.layer.set(key,value);\n    }\n\n    onSettingOK() {\n        this.state.onOK();\n    }\n    onSettingCancle() {\n        this.props.layer.setProperties(this.state.defaultSetting);\n        this.state.onCancle();\n    }\n\n    defaultSetting(layer) {\n        return layer?layer.getProperties():{};\n    }\n\n}\n\nexport default RasterLayerSettingModal;","import React from 'react';\nimport {Button} from 'antd';\nimport { CompactPicker } from 'react-color';\n\nconst ColorChooser = (props) => {\n    if(props.visible) {\n        return (\n            <div>\n                <CompactPicker onChange={props.onColorChange}/>\n                <Button onClick={props.onOK}>确定</Button>\n            </div>\n        );\n    } else {\n        return <div style={{display: \"none\"}}/>;\n    }\n};\n\nexport default ColorChooser;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Modal,Input,Icon} from 'antd';\nimport ColorChooser from '../../common/ColorChooser';\nimport {defaultPointStyle,getPointStyleByColor} from '../../olmap/olmap';\n\nclass VectorLayerSettingModal extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            style: defaultPointStyle,\n            colorPanelVisible: false\n        };\n        this.toggleColorPanel = this.toggleColorPanel.bind(this);\n        this.onColorPanelChange = this.onColorPanelChange.bind(this);\n    }\n\n    render() {\n\n        const {layer} = this.props;\n\n        return(\n            <Modal\n                title = {\"矢量图层 \"+layer.get('name')+\" 属性设置：\"}\n                visible={this.props.visible}\n                onOk={this.props.onOK}\n                onCancel={this.props.onCancle}\n            >\n                填充颜色:<Input addonAfter={<Icon type=\"setting\" onClick={this.toggleColorPanel}/>} defaultValue={this.state.fillColor} />\n                <ColorChooser visible={this.state.colorPanelVisible} onColorChange={this.onColorPanelChange} onOK={this.toggleColorPanel}/>\n            </Modal>\n        );\n    }\n\n    onColorPanelChange(colorCode) {\n        console.log(colorCode.hex);\n        let layer = this.props.layer;\n        let style = this.state.style;\n        layer.setStyle(getPointStyleByColor(colorCode.hex));\n    }\n\n    toggleColorPanel() {\n        this.setState(preState=>({\n            colorPanelVisible: !preState.colorPanelVisible\n        }));\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    olmap: state.olmap.olmap\n});\n\nexport default connect(mapStateToProps,null)(VectorLayerSettingModal);","import React, {Component, Fragment} from 'react';\nimport * as OLMAP from '../../olmap/olmapManager';\nimport VectorLayerSettingModal from \"./VectorLayerSettingModal\";\nimport RasterLayerSettingModal from \"./RasterLayerSettingModal\";\n\nclass LayerSettingModal extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        return(\n            <Fragment>\n                {this.settingModalChooser()}\n            </Fragment>\n        );\n\n    }\n\n    settingModalChooser() {\n\n        let layerType = OLMAP.getLayerType(this.props.layer);\n\n        switch (layerType) {\n            case \"VectorLayer\":\n                return this.vectorLayerSettingModal();\n                break;\n            case \"ImageLayer\":\n                return this.rasterLayerSettingModal();\n                break;\n            default:\n                return this.rasterLayerSettingModal();\n\n        }\n\n    }\n\n    vectorLayerSettingModal() {\n        return (\n            <VectorLayerSettingModal\n                visible={this.props.visible}\n                layer={this.props.layer}\n                onOK={this.props.onOK}\n                onCancle={this.props.onCancle}\n            />\n        );\n    }\n\n    rasterLayerSettingModal() {\n        return (\n            <RasterLayerSettingModal\n                visible={this.props.visible}\n                layer={this.props.layer}\n                onOK={this.props.onOK}\n                onCancle={this.props.onCancle}\n            />\n        );\n\n    }\n\n}\n\nexport default LayerSettingModal;","import React, {Component} from 'react';\nimport {LayerItemWrapper, LayerToolDiv} from './style';\nimport {connect} from 'react-redux';\nimport * as olmapActions from '../olmap/store/actionCreator';\nimport * as OLMAP from \"../olmap/olmapManager\";\nimport RasterLayerSettingModal from \"./layerSettingModal/RasterLayerSettingModal\";\nimport LayerSettingModal from \"./layerSettingModal\";\n\n\nclass LayerItem extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            toolVisible: false,\n            settingVisible: false,\n            layerProps: {\n                visible: true\n            },\n            layer: OLMAP.findLayerByName(this.props.olmap, this.props.layerName)\n        };\n        this.onMouseEnter = this.onMouseEnter.bind(this);\n        this.onMouseLeave = this.onMouseLeave.bind(this);\n        this.onSettingClick = this.onSettingClick.bind(this);\n        this.onSettingOK = this.onSettingOK.bind(this);\n        this.onSettingCancle = this.onSettingCancle.bind(this);\n    }\n\n    render() {\n\n        const P = this.props;\n        const S = this.state;\n        return (\n            <LayerItemWrapper onMouseEnter={this.onMouseEnter} onMouseLeave={this.onMouseLeave}>\n                <span className='layerNameSpan'>{P.layerName}</span>\n                <LayerToolDiv className={S.toolVisible ? '' : 'hide'}>\n                    <span className=\"iconfont\" onClick={() => {\n                        P.layerUp(P.layerName)\n                    }}>&#xe612;</span>\n                    <span className=\"iconfont\" onClick={() => {\n                        P.layerDown(P.layerName)\n                    }}>&#xe615;</span>\n                    <span className=\"iconfont\" onClick={() => {\n                        P.zoomToLayer(P.olmap, P.layerName)\n                    }}>&#xeaf6;</span>\n                    <span className=\"iconfont\" onClick={() => {\n                        P.removeLayer(P.layerName)\n                    }}>&#xe603;</span>\n                    <span className=\"iconfont\" onClick={this.onSettingClick}>&#xe6ef;</span>\n                </LayerToolDiv>\n                {this.showSettingModal()}\n            </LayerItemWrapper>\n        );\n    }\n\n    showSettingModal() {\n\n        if(this.state.settingVisible) {\n            return (\n                <LayerSettingModal\n                    visible={this.state.settingVisible}\n                    layer={this.state.layer}\n                    onOK={this.onSettingOK}\n                    onCancle={this.onSettingCancle}\n                />\n            );\n        }\n\n    }\n\n    onSettingClick() {\n        this.setState({settingVisible: true});\n    }\n\n    onMouseEnter() {\n        this.setState({toolVisible: true});\n    }\n\n    onMouseLeave() {\n        this.setState({toolVisible: false});\n    }\n\n    onSettingOK() {\n        this.setState({settingVisible: false});\n    }\n\n    onSettingCancle() {\n        this.setState({settingVisible: false});\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    olmap: state.olmap.olmap\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    zoomToLayer: (olmap, name) => {\n        OLMAP.zoomToLayer(olmap, name);\n    },\n    layerUp: (name) => {\n        dispatch(olmapActions.layerUpAction(name));\n    },\n    layerDown: (name) => {\n        dispatch(olmapActions.layerDownAction(name));\n    },\n    removeLayer: (name) => {\n        dispatch(olmapActions.removeLayerByNameAction(name));\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LayerItem);","import React, {Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport {Group} from \"ol/layer\";\nimport {TOCWrapper,TOCTitle} from './style';\nimport LayerItem from './LayerItem';\n\nconst TOC = (props) => {\n\n    const { olmap } = props;\n\n    const makeLayerList = (layers) => {\n\n        return layers.getArray().map(layer=>{\n            const name = layer.get('name');\n            if(layer instanceof Group) { // 如果是groupLayer\n                return (\n                    <Fragment>\n                        <LayerItem layerName={name} key={name} />\n                        {makeLayerList(layer.getLayers())}\n                    </Fragment>\n                );\n            } else {\n                return (\n                    <LayerItem layerName={name} key={name} />\n                );\n            }\n\n        }).reverse();\n    };\n\n    return (\n        <TOCWrapper>\n            <TOCTitle><span>图层列表</span></TOCTitle>\n            {makeLayerList(olmap.getLayers())}\n        </TOCWrapper>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    layerVersion: state.olmap.layerVersion,\n    olmap: state.olmap.olmap\n});\n\nexport default connect(mapStateToProps,null)(TOC);","import styled from 'styled-components';\n\nexport const HeaderWrapper = styled.div`\n  padding: 0px;\n`;\n\nexport const TitleDiv = styled.div`\n  width: 200px;\n  height: 42px;\n  float: left;\n  color: #3eff59;\n  opacity: .5;\n  font: bold 30px sans-serif;\n  line-height: 42px;\n`;\n\nexport const MapDiv = styled.div`\n    height: 100%;\n    background-color: #040508;\n`;\n\nexport const TOCWrapper = styled.div`\n  position: absolute;\n  float:left;\n  top: 42px;\n  right: 0px;\n  z-index: 9;\n`;","import React, {Component,Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport MapToolbar from \"../toobar\";\nimport TOC from '../toc/';\nimport {HeaderWrapper, TitleDiv, MapDiv,TOCWrapper} from './style';\n\nclass Olmap extends Component {\n\n    render() {\n        return (\n            <Fragment>\n                <HeaderWrapper>\n                    <TitleDiv>WKGIS</TitleDiv>\n                    <MapToolbar/>\n                </HeaderWrapper>\n                <MapDiv id='map'/>\n                <TOCWrapper><TOC/></TOCWrapper>\n            </Fragment>\n        );\n    }\n\n    componentDidMount() {\n        this.props.olmap.setTarget('map');\n        this.props.olmap.on(\"change:propertychange\",()=>{console.log(\"map change\")});\n        this.props.olmap.on(\"click\",()=>{console.log(\"map click\")});\n        this.props.olmap.getLayers().on(\"change\",()=>{console.log(\"layers change\")});\n    }\n\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.props.olmap.render();\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    olmap: state.olmap.olmap\n});\n\nexport default connect(mapStateToProps,null)(Olmap);","\n\nconst defaultState = {\n    version: 1\n};\n\n\n\nexport default (state = defaultState, action) => {\n\n    return state;\n}","import {combineReducers} from 'redux';\nimport {reducer as olmapReducer} from '../olmap/store';\nimport {reducer as tocReducer} from '../toc/store';\n\nexport default combineReducers({\n    olmap: olmapReducer,\n    toc: tocReducer\n});","import {applyMiddleware, compose, createStore} from 'redux';\nimport reducer from './reducer';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nconst store = createStore(\n    reducer,enhancer\n);\n\nexport default store;","import {createGlobalStyle} from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n\thtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n  display: block;\n}\nbody {\n  line-height: 1;\n}\nol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n`;","import React, {Component} from 'react';\nimport Olmap from \"./olmap\";\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport {GlobalStyle} from '../style';\nimport 'antd/dist/antd.css';\nimport './static/iconfont/iconfont.css';\n\nclass MapAPP extends Component {\n    render() {\n        return(\n            <Provider store={store}>\n                <GlobalStyle/>\n                <Olmap />\n            </Provider>\n        );\n    }\n}\n\nexport default MapAPP;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MapApp from './map';\n\nReactDOM.render( <MapApp/>, document.getElementById('root'));\n"],"sourceRoot":""}